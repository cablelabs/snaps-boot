# Copyright (c) 2019 Cable Television Laboratories, Inc. ("CableLabs")
#                    and others.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at:
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Setting up PXE servers on KVM.
# see https://ubuntu.com/blog/early-experiences-with-pxe-net-boot-of-kvm-vms-on-ubuntu-for-s390x
---
- hosts: all

  become: yes
  gather_facts: no

  vars:
    vm_type: "{{ vm_type }}"
    vm_file: "/var/lib/libvirt/images/image-{{ vm_name }}.img"

  tasks:
    - name: destroy {{ vm_name }}
      virt:
        name: "{{ vm_name }}"
        command: destroy
      ignore_errors: yes

    - name: Prepare Ubuntu image
      block:
        - name: Download Ubuntu image to {{ vm_file }}
          get_url:
            url: https://cloud-images.ubuntu.com/bionic/current/bionic-server-cloudimg-amd64.img
            dest: "{{ vm_file }}"
            mode: 0664
            force: yes

        - name: Insert {{ vm_file }} image with public key and root password
          command: "virt-sysprep -a {{ vm_file }} --ssh-inject root:file:/root/.ssh/id_rsa.pub --root-password password:password"

        - name: Create netplan file
          template:
            src: servers/50-cloud-init.yaml.j2
            dest: /tmp/50-clout-init.yaml
          vars:
            nic_name: "{{ server_nic_name }}"
            ip_addr: "{{ ip_1_addr }}/{{ addr_bits }}"
            gateway: "{{ net_gateway }}"

        - name: Copy netplan into {{ vm_file }}
          command: "virt-copy-in -a {{ vm_file }} /tmp/50-clout-init.yaml /etc/netplan"
      when: vm_type == 'ubuntu'

    - name: create PXE image {{ vm_file }}
      command: "qemu-img create -f qcow2 {{ vm_file }} {{ img_size | default(5) }}"
      when: vm_type == 'pxe'

    - name: Define {{ vm_name }}
      virt:
        name: "{{ vm_name }}"
        command: define
        xml: '{{ lookup("template", "servers/node.xml.j2") }}'
      vars:
        name: "{{ vm_name }}"
        img_loc: "{{ vm_file }}"

    - name: start {{ vm_name }}
      virt:
        name: "{{ vm_name }}"
        state: running
