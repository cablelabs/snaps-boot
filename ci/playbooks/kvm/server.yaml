# Copyright (c) 2019 Cable Television Laboratories, Inc. ("CableLabs")
#                    and others.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at:
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Setting up PXE servers on KVM.
# see https://ubuntu.com/blog/early-experiences-with-pxe-net-boot-of-kvm-vms-on-ubuntu-for-s390x
---
- hosts: all

  become: yes
  gather_facts: no

  vars:
    vm_type: "{{ vm_type }}"
    images_dir: "/var/lib/libvirt/images"
    vm_file: "/var/lib/libvirt/images/image-{{ vm_name }}.img"
    img_file: "/var/lib/libvirt/images/{{ vm_name }}-userdata.img"

  tasks:
    - name: destroy {{ vm_name }}
      virt:
        name: "{{ vm_name }}"
        command: destroy
      ignore_errors: yes

    - name: Prepare Ubuntu cloud image for libvirt
      block:
        - name: Install dependencies
          apt:
            name:
              - python-boto3

        - name: Get Ubuntu cloud image
          aws_s3:
            aws_access_key: "{{ aws_access_key }}"
            aws_secret_key: "{{ aws_secret_key }}"
            bucket: "{{ image_s3_bucket }}"
            object: ubuntu-16.04-server-cloudimg-amd64-disk1.img
            dest: /tmp/ubuntu.img
            mode: get

        - name: Convert cloud image to /tmp/{{ vm_name }}-ubuntu.qcow2 as qcow2
          command: "qemu-img convert -O qcow2 /tmp/ubuntu.img {{ images_dir }}/{{ vm_name }}-ubuntu.qcow2"

        - name: Resize {{ vm_file }} to {{ img_size | default(5) }}G
          command: "qemu-img resize {{ images_dir }}/{{ vm_name }}-ubuntu.qcow2 +{{ img_size | default(5) }}G"

        - name: Create image for {{ vm_name }}
          command: "qemu-img create -f qcow2 -b {{ images_dir }}/{{ vm_name }}-ubuntu.qcow2 {{ vm_file }}"

        - name: Create network configuration for cloud-init
          template:
            src: servers/net-config.yaml.j2
            dest: "/tmp/{{ vm_name }}-net-config.yaml"

        - name: Create userdata file for cloud-init
          template:
            src: servers/userdata.yaml.j2
            dest: "/tmp/{{ vm_name }}-userdata.yaml"
          vars:
            password: "{{ srvr_password }}"
            pub_keys: "{{ public_keys }}"

        - name: Add net-config.yml & userdata.yml to userdata.img
          command: "cloud-localds -N /tmp/{{ vm_name }}-net-config.yaml /tmp/{{ vm_name }}-userdata.img /tmp/{{ vm_name }}-userdata.yaml"

        - name: Copy /tmp/{{ vm_name }}-userdata.img
          copy:
            src: "/tmp/{{ vm_name }}-userdata.img"
            dest: "{{ img_file }}"
            mode: 0664
            remote_src: yes
      when: vm_type == 'ubuntu'

    - name: Create PXE image {{ vm_file }}
      command: "qemu-img create -f qcow2 {{ vm_file }} {{ img_size | default(10) }}G"
      when: vm_type == 'pxe'

    - name: Resize PXE image {{ vm_file }}
      command: "qemu-img resize {{ vm_file }} +{{ img_size | default(10) }}G"
      when: vm_type == 'pxe'

    - name: Define {{ vm_name }}
      virt:
        name: "{{ vm_name }}"
        command: define
        xml: '{{ lookup("template", "servers/node.xml.j2") }}'
      vars:
        name: "{{ vm_name }}"
        img_loc: "{{ vm_file }}"
        userdata_img_loc: "{{ img_file }}"
        type: "{{ vm_type }}"
        nets: "{{ networks }}"

    - name: Set autostart and start {{ vm_name }}
      virt:
        name: "{{ vm_name }}"
        autostart: yes
        state: running
