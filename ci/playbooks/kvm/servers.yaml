# Copyright (c) 2019 Cable Television Laboratories, Inc. ("CableLabs")
#                    and others.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at:
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Setting up PXE servers on KVM.
# see https://ubuntu.com/blog/early-experiences-with-pxe-net-boot-of-kvm-vms-on-ubuntu-for-s390x
---
- hosts: all

  become: yes

  gather_facts: no

  tasks:
#    - name: Install apt dependencies
#      become: yes
#      apt:
#        name:
#          - python-pip
#
#    - name: Install s3 pip dependencies
#      become: yes
#      pip:
#        name:
#          - botocore
#          - boto3
#
#    - name: download PXE image {{ pxe_img }} from S3
#      aws_s3:
#        aws_access_key: "{{ aws_access_key }}"
#        aws_secret_key: "{{ aws_secret_key }}"
#        bucket: snaps-ci
#        object: "libvirt-pxe.qcow2"
#        dest: "{{ pxe_img }}"
#        mode: get

    - name: Delete old qcow2
      file:
        path: "{{ pxe_img }}"
        state: absent

    - name: create PXE image {{ pxe_img }}_1
      command: "qemu-img create -f qcow2 {{ pxe_img }}_1 {{ img_size | default(5) }}"

    - name: create PXE image {{ pxe_img }}_2
      command: "qemu-img create -f qcow2 {{ pxe_img }}_2 {{ img_size | default(5) }}"

    - name: destroy node 1
      virt:
        name: node-1
        command: destroy
      ignore_errors: yes

    - name: Define node-1
      virt:
        name: node-1
        command: define
        xml: '{{ lookup("template", "servers/node.xml.j2") }}'
      vars:
        vm_name: node-1
        img_loc: "{{ pxe_img }}_1"

    - name: start node-1
      virt:
        name: node-1
        state: running

    - name: destroy node 2
      virt:
        name: node-2
        command: destroy
      ignore_errors: yes

    - name: Define node-2
      virt:
        name: node-2
        command: define
        xml: '{{ lookup("template", "servers/node.xml.j2") }}'
      vars:
        vm_name: node-2
        img_loc: "{{ pxe_img }}_2"

    - name: start node-2
      virt:
        name: node-2
        state: running
