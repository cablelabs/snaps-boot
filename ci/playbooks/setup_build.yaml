# Copyright (c) 2017 Cable Television Laboratories, Inc. ("CableLabs")
#                    and others.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at:
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- hosts: all

  vars:
    run_as_root: "{{ run_as_root | default(false) }}"

  tasks:
  - name: Install apt dependencies
    become: yes
    become_method: sudo
    become_user: root
    apt:
      update_cache: yes
      name:
        - python-pip

  - name: Delete {{ src_copy_dir }}/snaps-boot directory
    become: yes
    become_method: sudo
    become_user: root
    file:
      state: absent
      dest: "{{ src_copy_dir }}/snaps-boot"
    ignore_errors: yes

  - name: Copy this source tree to {{ src_copy_dir }}/snaps-boot
    synchronize:
      src: ../../../
      dest: "{{ src_copy_dir }}/snaps-boot"
      dirs: yes
      rsync_opts:
        - "--exclude=.idea"
        - "--exclude=venv"
        - "--exclude=.git/objects/pack"
        - "--exclude=ci/aws/terraform/.terraform"

  - name: Install snaps-boot requirements-git.txt
    become: yes
    become_method: sudo
    become_user: root
    command: pip install -r {{ src_copy_dir }}/snaps-boot/requirements-git.txt

  - name: Install snaps-boot
    become: yes
    become_method: sudo
    become_user: root
    command: python setup.py install
    args:
      chdir: "{{ src_copy_dir }}/snaps-boot"
#    pip:
#      name: file://{{ src_copy_dir }}/snaps-boot

  - name: Apply template and copy hosts.yaml to {{ hosts_yaml_path }}
    template:
      src: templates/hosts.yaml.j2
      dest: "{{ hosts_yaml_path }}"

  - name: Install as ROOT
    block:
      - name: pre clean as ROOT
        shell: "python {{ src_copy_dir }}/snaps-boot/iaas_launch.py -f {{ hosts_yaml_path }} -pc >> /tmp/snaps-boot.log"
        ignore_errors: True

      - name: Install as ROOT
        shell: "python {{ src_copy_dir }}/snaps-boot/iaas_launch.py -f {{ hosts_yaml_path }} -p -or >> /tmp/snaps-boot.log"
        ignore_errors: True
        register: out_root
    when: run_as_root|bool
    become: yes
    become_method: sudo
    become_user: root

  - name: Evaluate Install as ROOT
    block:
    - debug:
        var: out_root.stderr_lines
    - fail: msg="iaas_launch.py -f {{ hosts_yaml_path }} -p command failed"
    when: run_as_root|bool and out_root.rc != 0

  - name: Install as {{ ansible_user_id }}
    block:
      - name: pre clean as {{ ansible_user_id }}
        shell: "python {{ src_copy_dir }}/snaps-boot/iaas_launch.py -f {{ hosts_yaml_path }} -pc >> /tmp/snaps-boot.log"
        ignore_errors: True

      - name: Install as {{ ansible_user_id }}
        shell: "python {{ src_copy_dir }}/snaps-boot/iaas_launch.py -f {{ hosts_yaml_path }} -p -or >> /tmp/snaps-boot.log"
        register: out_user
        ignore_errors: True
    when: not run_as_root|bool

  - name: Evaluate Install as {{ ansible_user_id }}
    block:
      - debug:
          var: out_user.stderr_lines
      - fail: msg="iaas_launch.py -f {{ hosts_yaml_path }} -p command failed"
    when: not run_as_root|bool and out_user.rc != 0
