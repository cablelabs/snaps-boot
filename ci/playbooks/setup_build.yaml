# Copyright (c) 2017 Cable Television Laboratories, Inc. ("CableLabs")
#                    and others.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at:
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- hosts: all

  vars:
    run_as: "{{ run_as | default('root') }}"

  tasks:
  - name: Delete {{ src_copy_dir }}/snaps-boot directory
    become: yes
    become_method: sudo
    become_user: root
    file:
      state: absent
      dest: "{{ src_copy_dir }}/snaps-boot"

  - name: Copy this source tree from local {{ src_snaps_boot_dir }} to {{ src_copy_dir }}/snaps-boot
    synchronize:
      src: "{{ src_snaps_boot_dir }}"
      dest: "{{ src_copy_dir }}"
      dirs: yes
      rsync_opts:
        - "--exclude=.idea"

  - name: Check if {{ src_copy_dir }}/snaps-boot exists
    stat: path={{ src_copy_dir }}/snaps-boot
    register: dir

  - name: Move from {{ src_copy_dir }}/{{ src_snaps_boot_dir.split('/')[-1] }} to {{ src_copy_dir }}/snaps-boot
    command: mv {{ src_copy_dir }}/{{ src_snaps_boot_dir.split('/')[-1] }} {{ src_copy_dir }}/snaps-boot
    when: not dir.stat.exists

  - name: Install python-pip
    become: yes
    become_method: sudo
    become_user: root
    apt: name=python-pip

  - name: Install snaps-boot requirements-git.txt
    become: yes
    become_method: sudo
    become_user: root
    command: pip install -r {{ src_copy_dir }}/snaps-boot/requirements-git.txt

  - name: Install snaps-boot
    become: yes
    become_method: sudo
    become_user: root
    command: pip install -e {{ src_copy_dir }}/snaps-boot

  - name: Apply template and copy hosts.yaml to {{ hosts_yaml_path }}
    action: template src=templates/hosts.yaml.j2 dest={{ hosts_yaml_path }}

  - name: Clean just in case PXE & DHCP server as ROOT - iaas_launch.py -pc (see output @ /tmp/snaps-boot.log)
    become: yes
    become_method: sudo
    become_user: root
    shell: "python {{ src_copy_dir }}/snaps-boot/iaas_launch.py -f {{ hosts_yaml_path }} -pc >> /tmp/snaps-boot.log"
    register: out
    ignore_errors: True
    when: run_as == 'root'

  - name: Clean just in case PXE & DHCP server - iaas_launch.py -pc (see output @ /tmp/snaps-boot.log)
    shell: "python {{ src_copy_dir }}/snaps-boot/iaas_launch.py -f {{ hosts_yaml_path }} -pc -or >> /tmp/snaps-boot.log"
    register: out
    ignore_errors: True
    when: run_as != 'root'

  - debug:
      msg: "Running as {{ run_as }}"
    when: run_as == 'root'

  - name: Config PXE & DHCP server as ROOT - iaas_launch.py -p (see output @ /tmp/snaps-boot.log)
    become: yes
    become_method: sudo
    become_user: root
    shell: "python {{ src_copy_dir }}/snaps-boot/iaas_launch.py -f {{ hosts_yaml_path }} -p -or >> /tmp/snaps-boot.log"
    register: out_root
    ignore_errors: True
    when: run_as == 'root'

  - debug:
      var: out_root.stderr_lines
    when: run_as == 'root' and out_root.rc != 0

  - name: Config PXE & DHCP server - iaas_launch.py -p (see output @ /tmp/snaps-boot.log)
    shell: "python {{ src_copy_dir }}/snaps-boot/iaas_launch.py -f {{ hosts_yaml_path }} -p -or >> /tmp/snaps-boot.log"
    register: out_user
    ignore_errors: True
    when: run_as != 'root'

  - debug:
      var: out_user.stderr_lines
    when: run_as != 'root' and out_user.rc != 0

  - name: Validating iaas_launch returned 0
    fail: msg="iaas_launch.py -f {{ hosts_yaml_path }} -p command failed"
    when: (run_as == 'root' and out_root.rc != 0) or (run_as != 'root' and out_user.rc != 0)
